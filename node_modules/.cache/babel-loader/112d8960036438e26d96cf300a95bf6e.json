{"ast":null,"code":"import _slicedToArray from\"/Users/ada/capstone-scratch/Scratch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{GoogleMap,useLoadScript,Marker,InfoWindow}from\"@react-google-maps/api\";import mapStyles from\"../mapStyles\";import firebase from\"firebase\";import UserContext from\"../UserContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mapContainerStyle={width:\"90vw\",height:\"90vh\"};var center={lat:47.620084,lng:-122.320126};var options={styles:mapStyles,disableDefaultUI:true,zoomControl:true};// const onLoad = (marker) => {\n//   console.log(\"marker: \", marker);\n// };\nvar position={lat:47.605,lng:-122.3344};function Map(props){var _React$useContext=React.useContext(UserContext),user=_React$useContext.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),restaurants=_useState2[0],setRestaurants=_useState2[1];console.log(restaurants&&restaurants.filter(function(r){return!r.Location.lng;}));var Search=function Search(search){var r=firebase.database().ref(\"Restaurants\");r.on(\"value\",function(snapshot){var filteredResults=Array.from(snapshot.val()).filter(function(result,i,a){return result.Name.toLowerCase().includes(search);});setRestaurants(filteredResults);});};var saveResults=function saveResults(){var r=firebase.database().ref(\"Searches\");r.set({restaurants:restaurants,userID:user.uid,query:query});r.get().then(function(snapshot){console.log('saved searches',snapshot.val());});console.log(restaurants);};var _useLoadScript=useLoadScript({googleMapsApiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY}),isLoaded=_useLoadScript.isLoaded,loadError=_useLoadScript.loadError;var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),selected=_React$useState2[0],setSelected=_React$useState2[1];var _React$useState3=React.useState(new URLSearchParams(props.location.search).get(\"q\")||''),_React$useState4=_slicedToArray(_React$useState3,2),query=_React$useState4[0],setQuery=_React$useState4[1];React.useEffect(function(){Search(query);},[]);if(loadError)return\"Error loading maps\";return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();Search(query);},children:[/*#__PURE__*/_jsx(\"input\",{type:\"button\",onClick:saveResults,value:\"Save Search\",disabled:!user}),/*#__PURE__*/_jsx(\"input\",{onInput:function onInput(e){console.log(e.target.value);setQuery(e.target.value);},type:\"search\",value:query})]}),isLoaded&&/*#__PURE__*/_jsxs(GoogleMap,{mapContainerStyle:mapContainerStyle,zoom:13,center:center,options:options,id:\"marker-example\",children:[restaurants.map(function(restaurant){return/*#__PURE__*/_jsx(Marker,{// onLoad={onLoad}\nposition:{lat:restaurant.Location.lat,lng:restaurant.Location.lng},onClick:function onClick(){setSelected(restaurant);}},restaurant.Name);}),selected?/*#__PURE__*/_jsx(InfoWindow,{position:{lat:selected.Location.lat,lng:selected.Location.lng},onCloseClick:function onCloseClick(){setSelected(null);},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\" \",selected.Name,\" \"]}),/*#__PURE__*/_jsx(\"p\",{children:selected.Address})]})}):null]})]});}export default Map;","map":{"version":3,"sources":["/Users/ada/capstone-scratch/Scratch/src/components/Map.js"],"names":["React","useState","GoogleMap","useLoadScript","Marker","InfoWindow","mapStyles","firebase","UserContext","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","position","Map","props","useContext","user","restaurants","setRestaurants","console","log","filter","r","Location","Search","search","database","ref","on","snapshot","filteredResults","Array","from","val","result","i","a","Name","toLowerCase","includes","saveResults","set","userID","uid","query","get","then","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","isLoaded","loadError","selected","setSelected","URLSearchParams","location","setQuery","useEffect","e","preventDefault","target","value","map","restaurant","Address"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport mapStyles from \"../mapStyles\";\nimport firebase from \"firebase\";\nimport UserContext from \"../UserContext\"\n\n\n\nconst mapContainerStyle = {\n  width: \"90vw\",\n  height: \"90vh\",\n};\n\nconst center = {\n  lat: 47.620084,\n  lng: -122.320126,\n};\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\n// const onLoad = (marker) => {\n//   console.log(\"marker: \", marker);\n// };\n\nconst position = {\n  lat: 47.605,\n  lng: -122.3344,\n};\n\nfunction Map(props) {\n  const { user } = React.useContext(UserContext)\n  const [restaurants, setRestaurants] = useState([]);\n  console.log(restaurants && restaurants.filter(r => !r.Location.lng))\n\n  const Search = (search) => {\n    const r = firebase.database().ref(\"Restaurants\");\n    r.on(\"value\", (snapshot) => {\n      let filteredResults = Array.from(snapshot.val()).filter((result, i, a) =>\n        result.Name.toLowerCase().includes(search)\n      );\n      setRestaurants(filteredResults);\n    });\n  };\n \n  \n\n  const saveResults = () => {\n    const r = firebase.database().ref(\"Searches\");\n    r.set({\n      restaurants: restaurants,\n      userID: user.uid,\n      query: query,\n    });\n\n    r.get().then((snapshot) => {\n      console.log('saved searches', snapshot.val());\n    })\n    console.log(restaurants);\n  };\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  });\n\n  const [selected, setSelected] = React.useState(null);\n  const [query, setQuery] = React.useState(\n    new URLSearchParams(props.location.search).get(\"q\") || ''\n  );\n\n  React.useEffect(() => {\n    Search(query)\n  }, [])\n\n  if (loadError) return \"Error loading maps\";\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          Search(query);\n        }}\n      >\n        <input type=\"button\" onClick={saveResults} value=\"Save Search\" disabled={!user} />\n        <input\n          onInput={(e) => {\n            console.log(e.target.value);\n            setQuery(e.target.value);\n          }}\n          type=\"search\"\n          value={query}\n        ></input>\n      </form>\n\n      {isLoaded && (\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          zoom={13}\n          center={center}\n          options={options}\n          id=\"marker-example\"\n        >\n          {restaurants.map((restaurant) => (\n            <Marker\n              key={restaurant.Name}\n              // onLoad={onLoad}\n              position={{\n                lat: restaurant.Location.lat,\n                lng: restaurant.Location.lng,\n              }}\n              onClick={() => {\n                setSelected(restaurant);\n              }}\n            />\n          ))}\n\n          {selected ? (\n            <InfoWindow\n              position={{\n                lat: selected.Location.lat,\n                lng: selected.Location.lng,\n              }}\n              onCloseClick={() => {\n                setSelected(null);\n              }}\n            >\n              <div>\n                <h2> {selected.Name} </h2>\n                <p>{selected.Address}</p>\n              </div>\n            </InfoWindow>\n          ) : null}\n        </GoogleMap>\n      )}\n    </div>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}