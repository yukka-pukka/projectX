{"ast":null,"code":"var _jsxFileName = \"/Users/ada/capstone-scratch/Scratch/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport mapStyles from \"../mapStyles\";\nimport firebase from \"firebase\";\nimport { search } from \"language-tags\";\nimport { rest } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst restaurantData = [{\n  id: 1,\n  lat: 47.620084,\n  lng: -122.320126,\n  time: new Date()\n}, {\n  id: 2,\n  lat: 47.614579,\n  lng: -122.333224,\n  time: new Date()\n}, {\n  id: 3,\n  lat: 47.618578,\n  lng: -122.321079,\n  time: new Date()\n}];\nconst mapContainerStyle = {\n  width: \"90vw\",\n  height: \"90vh\"\n};\nconst center = {\n  lat: 47.620084,\n  lng: -122.320126\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst onLoad = marker => {\n  console.log(\"marker: \", marker);\n};\n\nconst position = {\n  lat: 47.605,\n  lng: -122.3344\n};\n\nfunction Map(props) {\n  _s();\n\n  const [restaurants, setRestaurants] = useState([]);\n\n  const Search = search => {\n    const r = firebase.database().ref(\"Restaurants\");\n    r.on(\"value\", snapshot => {\n      let filteredResults = Array.from(snapshot.val()).filter(result => result.Name.toLowerCase().includes(search));\n      setRestaurants(filteredResults);\n    });\n  };\n\n  const saveResults = () => {\n    const r = firebase.database().ref(\"Searches\");\n    r.set({\n      restaurants: restaurants,\n      userID: \"oMakJOXG2cX5GmRnpwHqBwO59Mw2\",\n      query: query\n    });\n    console.log(restaurants);\n  };\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const [selected, setSelected] = React.useState(null);\n  const [query, setQuery] = React.useState(new URLSearchParams(props.location.search).get(\"q\")); //  default value  if not query, if (!query) { setQuery(\"blinis\"); }\n\n  if (loadError) return \"Error loading maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        Search(e.target[0].value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: saveResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: e => {\n          console.log(e.target.value);\n          setQuery(e.target.value);\n        },\n        type: \"search\",\n        value: query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 13,\n      center: center,\n      options: options,\n      id: \"marker-example\",\n      children: [restaurants.map(restaurant => console.log(restaurant) || /*#__PURE__*/_jsxDEV(Marker, {\n        onLoad: onLoad,\n        position: {\n          lat: restaurant.Location.lat,\n          lng: restaurant.Location.lng\n        },\n        onClick: () => {\n          console.log(restaurant);\n          debugger;\n          setSelected(restaurant);\n        }\n      }, restaurant.Name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selected.Location.lat,\n          lng: selected.Location.lng\n        },\n        onCloseClick: () => {\n          setSelected(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\" \", selected.Name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selected.Address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"igKxFJ5DboP/oEmc9Hu+XUSc+iU=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/ada/capstone-scratch/Scratch/src/components/Map.js"],"names":["React","useState","GoogleMap","useLoadScript","Marker","InfoWindow","mapStyles","firebase","search","rest","restaurantData","id","lat","lng","time","Date","mapContainerStyle","width","height","center","options","styles","disableDefaultUI","zoomControl","onLoad","marker","console","log","position","Map","props","restaurants","setRestaurants","Search","r","database","ref","on","snapshot","filteredResults","Array","from","val","filter","result","Name","toLowerCase","includes","saveResults","set","userID","query","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","selected","setSelected","setQuery","URLSearchParams","location","get","e","preventDefault","target","value","map","restaurant","Location","Address"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport mapStyles from \"../mapStyles\";\nimport firebase from \"firebase\";\nimport { search } from \"language-tags\";\nimport { rest } from \"lodash\";\n\nconst restaurantData = [\n  { id: 1, lat: 47.620084, lng: -122.320126, time: new Date() },\n  { id: 2, lat: 47.614579, lng: -122.333224, time: new Date() },\n  { id: 3, lat: 47.618578, lng: -122.321079, time: new Date() },\n];\n\nconst mapContainerStyle = {\n  width: \"90vw\",\n  height: \"90vh\",\n};\n\nconst center = {\n  lat: 47.620084,\n  lng: -122.320126,\n};\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nconst onLoad = (marker) => {\n  console.log(\"marker: \", marker);\n};\nconst position = {\n  lat: 47.605,\n  lng: -122.3344,\n};\n\nfunction Map(props) {\n  const [restaurants, setRestaurants] = useState([]);\n\n  const Search = (search) => {\n    const r = firebase.database().ref(\"Restaurants\");\n    r.on(\"value\", (snapshot) => {\n      let filteredResults = Array.from(snapshot.val()).filter((result) =>\n        result.Name.toLowerCase().includes(search)\n      );\n      setRestaurants(filteredResults);\n    });\n  };\n\n  const saveResults = () => {\n    const r = firebase.database().ref(\"Searches\");\n    r.set({\n      restaurants: restaurants,\n      userID: \"oMakJOXG2cX5GmRnpwHqBwO59Mw2\",\n      query: query,\n    });\n\n    console.log(restaurants);\n  };\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  });\n\n  const [selected, setSelected] = React.useState(null);\n  const [query, setQuery] = React.useState(\n    new URLSearchParams(props.location.search).get(\"q\")\n  );\n  //  default value  if not query, if (!query) { setQuery(\"blinis\"); }\n\n  if (loadError) return \"Error loading maps\";\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          Search(e.target[0].value);\n        }}\n      >\n        <input type=\"button\" onClick={saveResults}></input>\n        <input\n          onInput={(e) => {\n            console.log(e.target.value);\n            setQuery(e.target.value);\n          }}\n          type=\"search\"\n          value={query}\n        ></input>\n      </form>\n\n      {isLoaded && (\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          zoom={13}\n          center={center}\n          options={options}\n          id=\"marker-example\"\n        >\n          {restaurants.map((restaurant) => console.log(restaurant) || (\n            <Marker\n              key={restaurant.Name}\n              onLoad={onLoad}\n              position={{\n                lat: restaurant.Location.lat,\n                lng: restaurant.Location.lng,\n              }}\n              onClick={() => {\n                console.log(restaurant)\n                debugger\n                setSelected(restaurant);\n              }}\n            />\n          ))}\n\n          {selected ? (\n            <InfoWindow\n              position={{\n                lat: selected.Location.lat,\n                lng: selected.Location.lng,\n              }}\n              onCloseClick={() => {\n                setSelected(null);\n              }}\n            >\n              <div>\n                <h2> {selected.Name} </h2>\n                <p>{selected.Address}</p>\n              </div>\n            </InfoWindow>\n          ) : null}\n        </GoogleMap>\n      )}\n    </div>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}