{"ast":null,"code":"var _jsxFileName = \"/Users/ada/capstone-scratch/Scratch/src/components/Map.js\";\nimport React, { useState } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport mapStyles from \"../mapStyles\";\nimport Restaurants from \"./restaurants/restaurants\";\nimport { data } from \"browserslist\";\nimport firebase from \"firebase\";\nimport { search } from \"language-tags\"; // import RestaurantList from \"./listall\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst restaurantData = [{\n  id: 1,\n  lat: 47.620084,\n  lng: -122.320126,\n  time: new Date()\n}, {\n  id: 2,\n  lat: 47.614579,\n  lng: -122.333224,\n  time: new Date()\n}, {\n  id: 3,\n  lat: 47.618578,\n  lng: -122.321079,\n  time: new Date()\n}];\nconst mapContainerStyle = {\n  width: \"90vw\",\n  height: \"90vh\"\n};\nconst center = {\n  lat: 47.620084,\n  lng: -122.320126\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst onLoad = marker => {\n  console.log(\"marker: \", marker);\n};\n\nconst position = {\n  lat: 47.605,\n  lng: -122.3344\n};\nexport default class Map extends React.Component {\n  render() {\n    console.log(props.location);\n    const restaurants = [];\n    const setRestaurants = [];\n\n    const Search = e => {\n      e.preventDefault();\n      const r = firebase.database().ref('Restaurants');\n      const search = e.target[0].value;\n      r.on('value', snapshot => {\n        let filteredResults = Array.from(snapshot.val()).filter(result => result.Name.toLowerCase().includes(search));\n        setRestaurants(filteredResults);\n      });\n    };\n\n    const {\n      isLoaded,\n      loadError\n    } = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n    });\n    const [selected, setSelected] = React.useState(null);\n    if (loadError) return \"Error loading maps\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => Search(e),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), isLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        zoom: 13,\n        center: center,\n        options: options,\n        id: \"marker-example\",\n        children: [restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(Marker, {\n          onLoad: onLoad,\n          position: {\n            lat: restaurant.Location.lat,\n            lng: restaurant.Location.lng\n          },\n          onClick: () => {\n            setSelected(restaurant);\n          }\n        }, restaurant.Name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: selected.Location.lat,\n            lng: selected.Location.lng\n          },\n          onCloseClick: () => {\n            setSelected(null);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\" \", selected.Name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selected.Address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ada/capstone-scratch/Scratch/src/components/Map.js"],"names":["React","useState","GoogleMap","useLoadScript","Marker","InfoWindow","mapStyles","Restaurants","data","firebase","search","restaurantData","id","lat","lng","time","Date","mapContainerStyle","width","height","center","options","styles","disableDefaultUI","zoomControl","onLoad","marker","console","log","position","Map","Component","render","props","location","restaurants","setRestaurants","Search","e","preventDefault","r","database","ref","target","value","on","snapshot","filteredResults","Array","from","val","filter","result","Name","toLowerCase","includes","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","selected","setSelected","map","restaurant","Location","Address"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport mapStyles from \"../mapStyles\";\nimport Restaurants from \"./restaurants/restaurants\";\nimport { data } from \"browserslist\";\nimport firebase from \"firebase\";\nimport { search } from \"language-tags\";\n// import RestaurantList from \"./listall\";\n\n\nconst restaurantData = [\n  { id: 1, lat: 47.620084, lng: -122.320126, time: new Date() },\n  { id: 2, lat: 47.614579, lng: -122.333224, time: new Date() },\n  { id: 3, lat: 47.618578, lng: -122.321079, time: new Date() },\n];\n\nconst mapContainerStyle = {\n  width: \"90vw\",\n  height: \"90vh\",\n};\n\nconst center = {\n  lat: 47.620084,\n  lng: -122.320126,\n};\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nconst onLoad = (marker) => {\n  console.log(\"marker: \", marker);\n};\nconst position = {\n  lat: 47.605,\n  lng: -122.3344,\n};\n\n\nexport default class Map extends React.Component {\nrender() {\n \n  console.log(props.location);\n\n\n  const restaurants = [];\n  const setRestaurants = [];\n\n  const Search = (e) => { \n    e.preventDefault()\n    const r = firebase.database().ref('Restaurants');\n    const search = e.target[0].value;\n      r.on('value', (snapshot) => {\n        let filteredResults = Array.from(snapshot.val()).filter((result) => result.Name.toLowerCase().includes(search));\n        setRestaurants(filteredResults);\n      });\n      };\n    \n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  });\n\n  const [selected, setSelected] = React.useState(null);\n\n  if (loadError) return \"Error loading maps\";\n  \n  \n  return (\n    <div>\n      <form onSubmit={ (e)=> Search(e)}>\n        <input type=\"search\"></input>\n      </form>\n      \n      {isLoaded && (\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          zoom={13}\n          center={center}\n          options={options}\n          id=\"marker-example\"\n        >\n          {restaurants.map((restaurant) => (\n            <Marker\n              key={restaurant.Name}\n              onLoad={onLoad}\n              position={{ lat: restaurant.Location.lat, lng: restaurant.Location.lng }}\n\n              onClick={() => {\n                setSelected(restaurant);\n              }}\n            />\n          ))}\n\n          {selected ? (\n            <InfoWindow\n              position={{ lat: selected.Location.lat, lng: selected.Location.lng }}\n              onCloseClick={() => {\n                setSelected(null);\n              }} \n            >\n              <div>\n                <h2> {selected.Name} </h2>\n                <p>\n                  {selected.Address}\n                  \n                </p>\n              </div>\n            </InfoWindow>\n          ) : null}\n        </GoogleMap>\n      )}\n    </div>\n  );\n};\n\n}\n"]},"metadata":{},"sourceType":"module"}