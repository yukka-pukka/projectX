{"ast":null,"code":"var _jsxFileName = \"/Users/ada/capstone-scratch/Scratch/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport mapStyles from \"../mapStyles\";\nimport { formatRelative } from \"date-fns\";\nimport Restaurants from \"./restaurants/restaurants\";\nimport { data } from \"browserslist\";\nimport { firebaseLooper } from \"../utils/helper\";\nimport axios from 'axios';\nimport firebase from \"firebase\";\nimport { search } from \"language-tags\"; // import RestaurantList from \"./listall\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst restaurantData = [{\n  id: 1,\n  lat: 47.620084,\n  lng: -122.320126,\n  time: new Date()\n}, {\n  id: 2,\n  lat: 47.614579,\n  lng: -122.333224,\n  time: new Date()\n}, {\n  id: 3,\n  lat: 47.618578,\n  lng: -122.321079,\n  time: new Date()\n}];\nconst mapContainerStyle = {\n  width: \"90vw\",\n  height: \"90vh\"\n};\nconst center = {\n  lat: 47.620084,\n  lng: -122.320126\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst onLoad = marker => {\n  console.log(\"marker: \", marker);\n};\n\nconst position = {\n  lat: 47.605,\n  lng: -122.3344\n};\n\nconst Map = () => {\n  _s();\n\n  const [restaurants, setRestaurants] = useState([]);\n\n  const Search = e => {\n    const r = firebase.database().ref('Restaurants');\n    const search = e.target[0].value;\n    r.on('value', snapshot => {\n      let filteredResults = Array.from(snapshot.val()).filter(result => result.Name.toLowerCase().includes(search));\n      setRestaurants(filteredResults);\n    });\n  };\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const [selected, setSelected] = React.useState(null);\n  if (loadError) return \"Error loading maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => Search(e),\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 13,\n      center: center,\n      options: options,\n      id: \"marker-example\",\n      children: [restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(Marker, {\n        onLoad: onLoad,\n        position: {\n          lat: restaurant.Location.lat,\n          lng: restaurant.Location.lng\n        },\n        onClick: () => {\n          setSelected(restaurant);\n        }\n      }, restaurant.Name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selected.Location.lat,\n          lng: selected.Location.lng\n        },\n        onCloseClick: () => {\n          setSelected(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\" \", selected.Name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selected.Address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"foyAxKOkqWPE8H8/hh0/enzViMg=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/ada/capstone-scratch/Scratch/src/components/Map.js"],"names":["React","useState","GoogleMap","useLoadScript","Marker","InfoWindow","mapStyles","formatRelative","Restaurants","data","firebaseLooper","axios","firebase","search","restaurantData","id","lat","lng","time","Date","mapContainerStyle","width","height","center","options","styles","disableDefaultUI","zoomControl","onLoad","marker","console","log","position","Map","restaurants","setRestaurants","Search","e","r","database","ref","target","value","on","snapshot","filteredResults","Array","from","val","filter","result","Name","toLowerCase","includes","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","selected","setSelected","map","restaurant","Location","Address"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport mapStyles from \"../mapStyles\";\nimport { formatRelative } from \"date-fns\";\nimport Restaurants from \"./restaurants/restaurants\";\nimport { data } from \"browserslist\";\nimport { firebaseLooper } from \"../utils/helper\";\nimport axios from 'axios';\nimport firebase from \"firebase\";\nimport { search } from \"language-tags\";\n// import RestaurantList from \"./listall\";\n\n\nconst restaurantData = [\n  { id: 1, lat: 47.620084, lng: -122.320126, time: new Date() },\n  { id: 2, lat: 47.614579, lng: -122.333224, time: new Date() },\n  { id: 3, lat: 47.618578, lng: -122.321079, time: new Date() },\n];\n\nconst mapContainerStyle = {\n  width: \"90vw\",\n  height: \"90vh\",\n};\n\nconst center = {\n  lat: 47.620084,\n  lng: -122.320126,\n};\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nconst onLoad = (marker) => {\n  console.log(\"marker: \", marker);\n};\nconst position = {\n  lat: 47.605,\n  lng: -122.3344,\n};\n\n\nconst Map= () => {\nconst [restaurants, setRestaurants] = useState([]);\n\n  const Search = (e) => { \n    const r = firebase.database().ref('Restaurants');\n    const search = e.target[0].value;\n      r.on('value', (snapshot) => {\n        let filteredResults = Array.from(snapshot.val()).filter((result) => result.Name.toLowerCase().includes(search));\n        setRestaurants(filteredResults);\n      });\n      };\n  \n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  });\n\n  const [selected, setSelected] = React.useState(null);\n\n  if (loadError) return \"Error loading maps\";\n\n  return (\n    <div>\n      <form onSubmit={ (e)=> Search(e)}>\n        <input type=\"search\"></input>\n      </form>\n      \n      {isLoaded && (\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          zoom={13}\n          center={center}\n          options={options}\n          id=\"marker-example\"\n        >\n          {restaurants.map((restaurant) => (\n            <Marker\n              key={restaurant.Name}\n              onLoad={onLoad}\n              position={{ lat: restaurant.Location.lat, lng: restaurant.Location.lng }}\n\n              onClick={() => {\n                setSelected(restaurant);\n              }}\n            />\n          ))}\n\n          {selected ? (\n            <InfoWindow\n              position={{ lat: selected.Location.lat, lng: selected.Location.lng }}\n              onCloseClick={() => {\n                setSelected(null);\n              }} \n            >\n              <div>\n                <h2> {selected.Name} </h2>\n                <p>\n                  {selected.Address}\n                  \n                </p>\n              </div>\n            </InfoWindow>\n          ) : null}\n        </GoogleMap>\n      )}\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}