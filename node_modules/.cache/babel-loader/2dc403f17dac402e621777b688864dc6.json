{"ast":null,"code":"import _defineProperty from\"/Users/ada/capstone-scratch/Scratch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/ada/capstone-scratch/Scratch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/ada/capstone-scratch/Scratch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ada/capstone-scratch/Scratch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/ada/capstone-scratch/Scratch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/ada/capstone-scratch/Scratch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ada/capstone-scratch/Scratch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Star from'./star.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Form=/*#__PURE__*/function(_Component){_inherits(Form,_Component);var _super=_createSuper(Form);function Form(){var _this;_classCallCheck(this,Form);_this=_super.call(this);_this.state={isActive:false,isSubmitted:false,rating:0,name:'',review:''};_this.handleInputChange=_this.handleInputChange.bind(_assertThisInitialized(_this));return _this;}_createClass(Form,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsx(\"div\",{className:\"review-form bg-white content-padding block-margin-top\",children:/*#__PURE__*/_jsxs(\"form\",{className:this.state.isActive?'':'hide',onSubmit:this.props.submitForm,children:[this.props.validation,/*#__PURE__*/_jsx(\"textarea\",{name:\"review\",value:this.props.review,placeholder:\"Put your review here.\",onChange:this.handleInputChange}),/*#__PURE__*/_jsx(Star,{rating:this.state.rating,onClick:function onClick(rating){return _this2.setState(_objectSpread(_objectSpread({},_this2.state),{},{rating:rating}));}}),\";\",/*#__PURE__*/_jsx(\"button\",{className:\"button\",type:\"submit\",value:\"Submit\",children:\"Submit\"})]})});}},{key:\"showForm\",value:function showForm(){this.setState(_objectSpread(_objectSpread({},this.state),{},{isActive:true}));}},{key:\"handleInputChange\",value:function handleInputChange(event){var target=event.target;var value=target.value;var name=target.name;this.setState(_objectSpread(_objectSpread({},this.state),{},_defineProperty({},name,value)));}}]);return Form;}(Component);export default Form;// class addCommentForm extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         author_name: '',\n//         rating: 5,\n//         text: ''\n//       };\n//     }\n//     onChangeHander = e => {\n//       let value = e.target.value;\n//       switch (e.target.name) {\n//         case 'author':\n//           this.setState({\n//             author_name: value\n//           });\n//           break;\n//         case 'comment_text':\n//           this.setState({\n//             text: value\n//           });\n//           break;\n//         case 'star':\n//           this.setState({\n//             rating: parseInt(value, 10)\n//           });\n//           break;\n//         default:\n//           return null;\n//       }\n//     };\n//     onSubmitHandler = e => {\n//       e.preventDefault();\n//     };\n//     render() {\n//       let form = null;\n//       // properties\n//       const { active, targetRestaurant, filterObject } = this.props;\n//       // Methods\n//       const {\n//         toggleCommentForm,\n//         addComment,\n//         turnOffAddCommentButton,\n//         filterRestaurants,\n//         mapBounds\n//       } = this.props;\n//       if (active) {\n//         form = (\n//           <div className=\"form-backdrop\">\n//             <div onClick={toggleCommentForm} className=\"close-btn\">\n//               <i className=\"far fa-window-close\" />\n//             </div>\n//             <form\n//               autoComplete=\"off\"\n//               className=\"AddCommentForm border border-success px-5 py-2 rounded\"\n//               onSubmit={e => {\n//                 this.onSubmitHandler(e);\n//                 addComment(\n//                   { ...this.state, time: getTimeStamp() },\n//                   targetRestaurant\n//                 );\n//                 turnOffAddCommentButton(targetRestaurant);\n//                 filterRestaurants(filterObject, mapBounds);\n//               }}\n//             >\n//               <div className=\"form-group\">\n//                 <label className=\"text-light\" htmlFor=\"\">\n//                   Name: <span className=\"text-danger\">*</span>\n//                 </label>\n//                 <input\n//                   name=\"author\"\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   onChange={e => {\n//                     this.onChangeHander(e);\n//                   }}\n//                   required\n//                 />\n//               </div>\n//               <RatingStar onchange={this.onChangeHander} />\n//               <div className=\"form-group\">\n//                 <label className=\"text-light\" htmlFor=\"\">\n//                   Comment:\n//                 </label>\n//                 <textarea\n//                   className=\"form-control\"\n//                   name=\"comment_text\"\n//                   onChange={e => {\n//                     this.onChangeHander(e);\n//                   }}\n//                 />\n//               </div>\n//               <input\n//                 type=\"submit\"\n//                 className=\"btn btn-success btn-sm\"\n//                 value=\"Submit\"\n//               />\n//             </form>\n//           </div>\n//         );\n//       }\n//       return form;\n//     }\n//   }","map":{"version":3,"sources":["/Users/ada/capstone-scratch/Scratch/src/components/reviews/reviewform.js"],"names":["React","Component","Star","Form","state","isActive","isSubmitted","rating","name","review","handleInputChange","bind","props","submitForm","validation","setState","event","target","value"],"mappings":"ujCAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,WAAjB,C,2FAGMC,CAAAA,I,4FACF,eACA,sCACI,wBAEA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,KADD,CAETC,WAAW,CAAE,KAFJ,CAGTC,MAAM,CAAE,CAHC,CAITC,IAAI,CAAE,EAJG,CAKTC,MAAM,CAAE,EALC,CAAb,CAQA,MAAKC,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB,CAXJ,aAYC,C,uCAED,iBACA,iBACI,mBACI,YAAK,SAAS,CAAC,uDAAf,uBAEI,cAAM,SAAS,CAAE,KAAKP,KAAL,CAAWC,QAAX,CAAsB,EAAtB,CAA2B,MAA5C,CAAoD,QAAQ,CAAE,KAAKO,KAAL,CAAWC,UAAzE,WAEK,KAAKD,KAAL,CAAWE,UAFhB,cAII,iBAAU,IAAI,CAAC,QAAf,CAAwB,KAAK,CAAE,KAAKF,KAAL,CAAWH,MAA1C,CAAkD,WAAW,CAAC,uBAA9D,CACU,QAAQ,CAAE,KAAKC,iBADzB,EAJJ,cAMI,KAAC,IAAD,EACA,MAAM,CAAI,KAAKN,KAAL,CAAWG,MADrB,CAEA,OAAO,CAAE,iBAACA,MAAD,QAAY,CAAA,MAAI,CAACQ,QAAL,gCAAkB,MAAI,CAACX,KAAvB,MAA6BG,MAAM,CAANA,MAA7B,GAAZ,EAFT,EANJ,kBAYI,eAAQ,SAAS,CAAC,QAAlB,CAA2B,IAAI,CAAC,QAAhC,CAAyC,KAAK,CAAC,QAA/C,oBAZJ,GAFJ,EADJ,CAwBH,C,wBAED,mBACA,CACI,KAAKQ,QAAL,gCAAkB,KAAKX,KAAvB,MAA8BC,QAAQ,CAAE,IAAxC,IACH,C,iCAED,2BAAkBW,KAAlB,CACA,CACI,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACC,MAArB,CACA,GAAMC,CAAAA,KAAK,CAAGD,MAAM,CAACC,KAArB,CACA,GAAMV,CAAAA,IAAI,CAAGS,MAAM,CAACT,IAApB,CAEA,KAAKO,QAAL,gCAAkB,KAAKX,KAAvB,wBAA+BI,IAA/B,CAAsCU,KAAtC,IACH,C,kBAxDcjB,S,EA2DnB,cAAeE,CAAAA,IAAfsourcesContent":["import React, {Component} from 'react';\nimport Star from './star.js';\n\n\nclass Form extends Component {\n    constructor()\n    {\n        super();\n\n        this.state = {\n            isActive: false,\n            isSubmitted: false,\n            rating: 0,\n            name: '',\n            review: '',\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    render()\n    {\n        return (\n            <div className=\"review-form bg-white content-padding block-margin-top\">\n\n                <form className={this.state.isActive ? '' : 'hide'} onSubmit={this.props.submitForm}>\n\n                    {this.props.validation}\n                    \n                    <textarea name=\"review\" value={this.props.review} placeholder=\"Put your review here.\"\n                              onChange={this.handleInputChange}/>\n                    <Star \n                    rating = {this.state.rating}\n                    onClick={(rating) => this.setState({...this.state,rating})}\n                       \n                    />;\n\n                    <button className=\"button\" type=\"submit\" value=\"Submit\">\n                        Submit \n                    </button>\n                </form>\n\n            \n\n            </div>\n        )\n    }\n\n    showForm()\n    {\n        this.setState({...this.state, isActive: true});\n    }\n\n    handleInputChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({...this.state, [name]: value})\n    }\n}\n\nexport default Form;\n\n\n// class addCommentForm extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         author_name: '',\n//         rating: 5,\n//         text: ''\n//       };\n//     }\n  \n//     onChangeHander = e => {\n//       let value = e.target.value;\n//       switch (e.target.name) {\n//         case 'author':\n//           this.setState({\n//             author_name: value\n//           });\n//           break;\n//         case 'comment_text':\n//           this.setState({\n//             text: value\n//           });\n//           break;\n//         case 'star':\n//           this.setState({\n//             rating: parseInt(value, 10)\n//           });\n//           break;\n//         default:\n//           return null;\n//       }\n//     };\n  \n//     onSubmitHandler = e => {\n//       e.preventDefault();\n//     };\n  \n//     render() {\n//       let form = null;\n  \n//       // properties\n//       const { active, targetRestaurant, filterObject } = this.props;\n  \n//       // Methods\n//       const {\n//         toggleCommentForm,\n//         addComment,\n//         turnOffAddCommentButton,\n//         filterRestaurants,\n//         mapBounds\n//       } = this.props;\n  \n//       if (active) {\n//         form = (\n//           <div className=\"form-backdrop\">\n//             <div onClick={toggleCommentForm} className=\"close-btn\">\n//               <i className=\"far fa-window-close\" />\n//             </div>\n//             <form\n//               autoComplete=\"off\"\n//               className=\"AddCommentForm border border-success px-5 py-2 rounded\"\n//               onSubmit={e => {\n//                 this.onSubmitHandler(e);\n//                 addComment(\n//                   { ...this.state, time: getTimeStamp() },\n//                   targetRestaurant\n//                 );\n//                 turnOffAddCommentButton(targetRestaurant);\n//                 filterRestaurants(filterObject, mapBounds);\n//               }}\n//             >\n//               <div className=\"form-group\">\n//                 <label className=\"text-light\" htmlFor=\"\">\n//                   Name: <span className=\"text-danger\">*</span>\n//                 </label>\n//                 <input\n//                   name=\"author\"\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   onChange={e => {\n//                     this.onChangeHander(e);\n//                   }}\n//                   required\n//                 />\n//               </div>\n//               <RatingStar onchange={this.onChangeHander} />\n//               <div className=\"form-group\">\n//                 <label className=\"text-light\" htmlFor=\"\">\n//                   Comment:\n//                 </label>\n//                 <textarea\n//                   className=\"form-control\"\n//                   name=\"comment_text\"\n//                   onChange={e => {\n//                     this.onChangeHander(e);\n//                   }}\n//                 />\n//               </div>\n//               <input\n//                 type=\"submit\"\n//                 className=\"btn btn-success btn-sm\"\n//                 value=\"Submit\"\n//               />\n//             </form>\n//           </div>\n//         );\n//       }\n//       return form;\n//     }\n//   }\n  "]},"metadata":{},"sourceType":"module"}