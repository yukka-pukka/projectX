{"ast":null,"code":"var _jsxFileName = \"/Users/ada/capstone-scratch/Scratch/src/components/reviews/star.js\";\nimport React from \"react\";\nimport _, { get } from 'lodash';\nimport react, { Component } from 'react'; // // import ReactStars from \"react-rating-stars-component\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Star extends Component {\n  render() {\n    const stars = [];\n\n    for (let i = 0; i < 5; i++) {\n      stars.push( /*#__PURE__*/_jsxDEV(\"svg\", {\n        height: \"25\",\n        width: \"23\",\n        value: \"3.5\",\n        className: \"star rating__star \",\n        \"data-rating\": this.props.rating,\n        onClick: () => this.setState({\n          stars: i\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"9.9, 1.1, 3.3, 21.78, 19.8, 8.58, 0, 8.58, 16.5, 21.78\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 24\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rating__prefix font-size-small\",\n        children: \"Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"rating\",\n        value: this.props.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.props.name,\n        name: \"name\",\n        placeholder: \"Naam\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), stars]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n} // // const star  = {\n// //     size: 60,\n// //     isHalf: true,\n// //     char: \"\",\n// //     value: 3.5,\n//     // onChange: newRating => {\n//     //   console.log(`new rating is ${newRating}`);\n//     // }\n// // }\n// export default Star;\n// function Star( props ){\n//     return (\n//       <div className={`star ${(props.value == 0) ? 'semi-active' : ''} ${(props.position <= props.rated) ? 'active' : ''} `} \n//            onMouseEnter={ props.onMouseEnter }\n//            onMouseLeave={ props.onMouseLeave }\n//            onClick={ props.onClick }\n//       >\n//         <i className=\"fas fa-star\"></i>\n//       </div>\n//     );\n//   }\n//   function Rating( props ){\n//     const messages = {\n//       \"1\": \"Oh. Sorry you had a bad experience :( \",\n//       \"2\": \"We will try to improve.\",\n//       \"3\": \"Appreciate it!\",\n//       \"4\": \"Thank you!\", \n//       \"5\": \"You're Awesome!\"\n//     };\n//     let rating = props.rating;\n//     return(\n//         <div className={\"after-rating-message \" + ((rating > 0) ? 'show': '')} >\n//             <span>You rated this {rating} star{rating > 1 ? 's' : ''}</span>\n//             <br/>\n//             <span>{ messages[rating] }</span>\n//         </div>\n//     );\n//   }\n//   class RatingWidget extends React.Component {\n//     constructor( props ) {\n//       super( props );\n//       this.state = {\n//         stars: Array(5).fill(-1),\n//         rated: 0\n//       };\n//     }\n//     handleMouseOver( i ) {\n//       let currentRating = this.state.rated;\n//       if ( currentRating > 0 ) {\n//         const hoverRatedStars = this.state.stars.slice();\n//         _.fill( hoverRatedStars, 0, currentRating, i );\n//         this.setState({ stars: hoverRatedStars });\n//       }\n//       else {\n//         const hoverStars = Array(5).fill(-1);\n//         _.fill( hoverStars, 0, 0, (i+1) );     \n//         this.setState({ stars: hoverStars});\n//       }\n//     }\n//     handleMouseOut() {\n//       let currentRating = this.state.rated;\n//       if ( currentRating > 0) {\n//         const resetRatedStars = this.state.stars.slice();\n//         _.fill( resetRatedStars, -1, currentRating, resetRatedStars.length );\n//         this.setState({stars: resetRatedStars});\n//       }\n//       else {\n//         const resetStars = this.state.stars.slice();\n//         _.fill( resetStars, -1, 0, resetStars.length );\n//         this.setState({stars: resetStars});\n//       }\n//     }\n//     handleClick( i ) {\n//       const clickedStar = this.state.stars.slice();\n//       _.fill( clickedStar, 1, 0, i );\n//       _.fill( clickedStar, 1, i, clickedStar.length );\n//       this.setState({\n//         stars: clickedStar,\n//         rated: i\n//       });\n//     }\n//     handleRating( rating ){\n//       return (<Rating rating={this.state.rated} />)\n//     }\n//     renderStar( i ){\n//       return (\n//         <Star \n//           position={i}\n//           value={this.state.stars[i]} \n//           rated={this.state.rated}\n//           onMouseEnter={ () => this.handleMouseOver(i) }\n//           onMouseLeave={ () => this.handleMouseOut() }\n//           onClick={ () => this.handleClick(i) }\n//           />\n//       );\n//     }\n//     render(){\n//       return (\n//         <div className='rating-stars-widget-outer'>\n//             <div className='rating-stars'>\n//               {this.renderStar(1)}\n//               {this.renderStar(2)}\n//               {this.renderStar(3)}\n//               {this.renderStar(4)}\n//               {this.renderStar(5)}\n//             </div>\n//             {this.handleRating( this.state.rated )}\n//         </div>\n//       );\n//     }\n//   }\n\n\nexport default Star; //   ReactDOM.render(<RatingWidget />, document.getElementById(\"widget\"));","map":{"version":3,"sources":["/Users/ada/capstone-scratch/Scratch/src/components/reviews/star.js"],"names":["React","_","get","react","Component","Star","render","stars","i","push","props","rating","setState","name","handleInputChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,IAAYC,GAAZ,QAAuB,QAAvB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,MAAM,GACN;AAEI,UAAMC,KAAK,GAAG,EAAd;;AAGA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACA;AACID,MAAAA,KAAK,CAACE,IAAN,eAAW;AAAK,QAAA,MAAM,EAAC,IAAZ;AAAiB,QAAA,KAAK,EAAC,IAAvB;AAA4B,QAAA,KAAK,EAAE,KAAnC;AAAyC,QAAA,SAAS,EAAC,oBAAnD;AAAwE,uBAAa,KAAKC,KAAL,CAAWC,MAAhG;AAIX,QAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEC;AAAT,SAAd,CAJJ;AAAA,+BAKX;AAAS,UAAA,MAAM,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AALW,SACJA,CADI;AAAA;AAAA;AAAA;AAAA,cAAX;AAOH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,QAA1B;AAAmC,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC;AAArD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWG,IAArC;AAA2C,QAAA,IAAI,EAAC,MAAhD;AAAuD,QAAA,WAAW,EAAC,MAAnE;AACI,QAAA,QAAQ,EAAE,KAAKC;AADnB;AAAA;AAAA;AAAA;AAAA,cAHJ,EAMKP,KANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA5BwB,C,CA+B7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;;;AAEE,eAAeF,IAAf,C,CAIF","sourcesContent":["import React from \"react\";\nimport _, { get } from 'lodash';\nimport react, {Component} from 'react';\n// // import ReactStars from \"react-rating-stars-component\";\n\nclass Star extends Component {\n    render()\n    {\n        \n        const stars = [];\n        \n            \n        for (let i = 0; i < 5; i++)\n        {\n            stars.push(<svg height=\"25\" width=\"23\" value= \"3.5\" className=\"star rating__star \" data-rating={this.props.rating}\n            key = {i}\n            \n\n            onClick={() => this.setState({ stars: i })}>\n            <polygon points=\"9.9, 1.1, 3.3, 21.78, 19.8, 8.58, 0, 8.58, 16.5, 21.78\"/>\n            </svg>)\n        }\n                              \n        return (\n            <div className=\"rating\">\n                <span className=\"rating__prefix font-size-small\">Review</span>\n                <input type=\"hidden\" name=\"rating\" value={this.props.rating}/>\n                <input type=\"text\" value={this.props.name} name=\"name\" placeholder=\"Naam\"\n                    onChange={this.handleInputChange}/>\n\n                {stars}\n            </div>\n        );\n    }\n}\n\n// // const star  = {\n// //     size: 60,\n// //     isHalf: true,\n// //     char: \"\",\n// //     value: 3.5,\n//     // onChange: newRating => {\n//     //   console.log(`new rating is ${newRating}`);\n//     // }\n// // }\n\n// export default Star;\n\n\n\n\n// function Star( props ){\n//     return (\n//       <div className={`star ${(props.value == 0) ? 'semi-active' : ''} ${(props.position <= props.rated) ? 'active' : ''} `} \n//            onMouseEnter={ props.onMouseEnter }\n//            onMouseLeave={ props.onMouseLeave }\n//            onClick={ props.onClick }\n  \n//       >\n//         <i className=\"fas fa-star\"></i>\n//       </div>\n//     );\n//   }\n\n\n  \n//   function Rating( props ){\n//     const messages = {\n//       \"1\": \"Oh. Sorry you had a bad experience :( \",\n//       \"2\": \"We will try to improve.\",\n//       \"3\": \"Appreciate it!\",\n//       \"4\": \"Thank you!\", \n//       \"5\": \"You're Awesome!\"\n//     };\n    \n//     let rating = props.rating;\n    \n//     return(\n//         <div className={\"after-rating-message \" + ((rating > 0) ? 'show': '')} >\n//             <span>You rated this {rating} star{rating > 1 ? 's' : ''}</span>\n//             <br/>\n//             <span>{ messages[rating] }</span>\n//         </div>\n//     );\n//   }\n  \n  \n//   class RatingWidget extends React.Component {\n//     constructor( props ) {\n//       super( props );\n//       this.state = {\n//         stars: Array(5).fill(-1),\n//         rated: 0\n//       };\n//     }\n    \n//     handleMouseOver( i ) {\n//       let currentRating = this.state.rated;\n      \n//       if ( currentRating > 0 ) {\n//         const hoverRatedStars = this.state.stars.slice();\n//         _.fill( hoverRatedStars, 0, currentRating, i );\n//         this.setState({ stars: hoverRatedStars });\n//       }\n//       else {\n//         const hoverStars = Array(5).fill(-1);\n\n//         _.fill( hoverStars, 0, 0, (i+1) );     \n//         this.setState({ stars: hoverStars});\n//       }\n//     }\n    \n//     handleMouseOut() {\n//       let currentRating = this.state.rated;\n//       if ( currentRating > 0) {\n//         const resetRatedStars = this.state.stars.slice();\n//         _.fill( resetRatedStars, -1, currentRating, resetRatedStars.length );\n//         this.setState({stars: resetRatedStars});\n//       }\n//       else {\n//         const resetStars = this.state.stars.slice();\n//         _.fill( resetStars, -1, 0, resetStars.length );\n//         this.setState({stars: resetStars});\n//       }\n//     }\n    \n//     handleClick( i ) {\n//       const clickedStar = this.state.stars.slice();\n      \n//       _.fill( clickedStar, 1, 0, i );\n//       _.fill( clickedStar, 1, i, clickedStar.length );\n        \n//       this.setState({\n//         stars: clickedStar,\n//         rated: i\n//       });\n//     }\n    \n    \n//     handleRating( rating ){\n//       return (<Rating rating={this.state.rated} />)\n//     }\n    \n//     renderStar( i ){\n//       return (\n//         <Star \n//           position={i}\n//           value={this.state.stars[i]} \n//           rated={this.state.rated}\n//           onMouseEnter={ () => this.handleMouseOver(i) }\n//           onMouseLeave={ () => this.handleMouseOut() }\n//           onClick={ () => this.handleClick(i) }\n//           />\n//       );\n//     }\n    \n//     render(){\n//       return (\n//         <div className='rating-stars-widget-outer'>\n//             <div className='rating-stars'>\n//               {this.renderStar(1)}\n//               {this.renderStar(2)}\n//               {this.renderStar(3)}\n//               {this.renderStar(4)}\n//               {this.renderStar(5)}\n//             </div>\n          \n//             {this.handleRating( this.state.rated )}\n//         </div>\n        \n        \n//       );\n//     }\n//   }\n\n  export default Star;\n\n  \n  \n//   ReactDOM.render(<RatingWidget />, document.getElementById(\"widget\"));\n\n"]},"metadata":{},"sourceType":"module"}