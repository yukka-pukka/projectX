{"ast":null,"code":"var _jsxFileName = \"/Users/ada/capstone-scratch/Scratch/src/components/restaurants/restaurants.js\";\nimport React, { Component } from 'react';\nimport { db } from '../../utils/firebase';\nimport { firebaseLooper } from '../../utils/helper';\nimport { restaurantsCollection } from '../../utils/firebase';\nimport HeartCheckbox from 'react-heart-checkbox';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Restaurants extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      restaurants: null\n    };\n\n    this.accessRestaurantData = restaurants => restaurants ? restaurants.map((data, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: data.location[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: data.location[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)) : null;\n  }\n\n  componentDidMount() {\n    axios.get('https://yuliacapstone-default-rtdb.firebaseio.com/restaurants.json').then(data => {\n      // this.setState({\n      //     restaurants\n      // });\n      console.log(data); // console.log(this.state,'<---restaurants state')\n    }).catch(error => {\n      console.log(error);\n    }); // db.collection('restaurants').get().then( snapshot => {\n    //     const restaurants = firebaseLooper(snapshot);\n    //     this.setState({\n    //         restaurants\n    //     });\n    //     console.log(restaurants)\n    //     console.log(this.state,'<---restaurants state')\n    // }).catch(error=> {\n    //     console.log(error)\n    // });\n  }\n\n  render() {\n    const restaurants = this.state.restaurants; // console.log(data.name)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Lat \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Long \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.handleRestaurantsData(restaurants)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const [favorites, setFavorite] = useState(\"\");\n// const addFavorite = (card, user) => {\n//     console.log(\"CARD + USER ON CLICK\", card, user);\n//     props.updateUser(card, user);\n//     setFavorite([...favorites, card.id]);\n//   };\n//    {!filteredData\n//         ? \"Sorry No Cards Found\"\n//         : filteredData.map(card => (\n//             <Table.Row key={card.id}>\n//                      //////MORE STUFF HERE\n//                   <Button\n//                   onClick={() => addFavorite(card, props.loggedUser)}\n//                   bordered\n//                   color={\n//                     favorites.includes(card.id) ? \"google plus\" : \"twitter\"\n//                   }\n//                   icon={\n//                     favorites.includes(card.id) ? \"heart\" : \"heart outline\"\n//                   }\n//                 />\n// class Demo extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       checked: false\n//     };\n//   }\n//   onClick = (evnet, props) => {\n//     this.setState({ checked: !this.state.checked });\n//   }\n//   render() {\n//     const { checked } = this.state;\n//     return (\n//       <>\n//         <h1>{checked ? 'checked' : 'unchecked'}</h1>\n//         <HeartCheckbox checked={checked} onClick={this.onClick} />\n//       </>\n//     );\n//   }\n// }\n// render(<Demo />, document.getElementById(\"app\"));\n\n\nexport default Restaurants;","map":{"version":3,"sources":["/Users/ada/capstone-scratch/Scratch/src/components/restaurants/restaurants.js"],"names":["React","Component","db","firebaseLooper","restaurantsCollection","HeartCheckbox","axios","Restaurants","state","restaurants","accessRestaurantData","map","data","i","name","location","componentDidMount","get","then","console","log","catch","error","render","handleRestaurantsData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAGhCO,KAHgC,GAGxB;AACJC,MAAAA,WAAW,EAAE;AADT,KAHwB;;AAAA,SAmChCC,oBAnCgC,GAmCRD,WAAD,IACnBA,WAAW,GAEPA,WAAW,CAACE,GAAZ,CAAgB,CAACC,IAAD,EAAMC,CAAN,kBAGZ;AAAA,8BACI;AAAA,kBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKF,IAAI,CAACG,QAAL,CAAc,CAAd;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKH,IAAI,CAACG,QAAL,CAAc,CAAd;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,OAASF,CAAT;AAAA;AAAA;AAAA;AAAA,YAHJ,CAFO,GAWT,IA/C0B;AAAA;;AAQhCG,EAAAA,iBAAiB,GAAE;AAEfV,IAAAA,KAAK,CAACW,GAAN,CAAU,oEAAV,EACCC,IADD,CACQN,IAAI,IAAI;AACR;AACA;AACA;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAJQ,CAKR;AACH,KAPL,EAOOS,KAPP,CAOaC,KAAK,IAAG;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KATL,EAFe,CAaf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEP;;AAmBGC,EAAAA,MAAM,GAAE;AACJ,UAAMd,WAAW,GAAI,KAAKD,KAAL,CAAWC,WAAhC,CADI,CAEJ;;AACA,wBACA;AAAA,6BAEI;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAA,oBACM,KAAKe,qBAAL,CAA2Bf,WAA3B;AADN;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADA;AAmBP;;AAzEmC,C,CA4EpC;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeF,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { db } from '../../utils/firebase';\nimport { firebaseLooper } from '../../utils/helper';\nimport { restaurantsCollection } from '../../utils/firebase';\nimport HeartCheckbox from 'react-heart-checkbox';\nimport axios from 'axios';\n\n\nclass Restaurants extends Component {\n    \n    \n    state = {\n        restaurants: null\n    }\n\n    \n    componentDidMount(){\n\n        axios.get('https://yuliacapstone-default-rtdb.firebaseio.com/restaurants.json')\n        .then(  data => {\n                // this.setState({\n                //     restaurants\n                // });\n                console.log(data)\n                // console.log(this.state,'<---restaurants state')\n            }).catch(error=> {\n                console.log(error)\n            });\n        \n        // db.collection('restaurants').get().then( snapshot => {\n        //     const restaurants = firebaseLooper(snapshot);\n        //     this.setState({\n        //         restaurants\n        //     });\n        //     console.log(restaurants)\n        //     console.log(this.state,'<---restaurants state')\n        // }).catch(error=> {\n        //     console.log(error)\n        // });\n     \n}\n\n\n    accessRestaurantData = (restaurants) => (\n        restaurants ?\n\n            restaurants.map((data,i) => (            \n                \n                \n                <tr key={i} >\n                    <th>{data.name}</th>\n                    <th>{data.location[0]}</th>\n                    <th>{data.location[1]}</th>\n                </tr>\n    ))\n        : null\n    )\n\n   \n    render(){\n        const restaurants  = this.state.restaurants  \n        // console.log(data.name)\n        return(\n        <div>\n        \n            <table className=\"table table-dark\">\n                <thead>\n                    <tr>\n                        <th> Name </th>\n                        <th> Lat </th>\n                        <th> Long </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    { this.handleRestaurantsData(restaurants)}\n                </tbody>\n            </table>\n        </div>\n       \n    )\n}\n}\n\n// const [favorites, setFavorite] = useState(\"\");\n\n// const addFavorite = (card, user) => {\n//     console.log(\"CARD + USER ON CLICK\", card, user);\n//     props.updateUser(card, user);\n//     setFavorite([...favorites, card.id]);\n//   };\n\n//    {!filteredData\n//         ? \"Sorry No Cards Found\"\n//         : filteredData.map(card => (\n//             <Table.Row key={card.id}>\n//                      //////MORE STUFF HERE\n\n//                   <Button\n//                   onClick={() => addFavorite(card, props.loggedUser)}\n//                   bordered\n//                   color={\n//                     favorites.includes(card.id) ? \"google plus\" : \"twitter\"\n//                   }\n//                   icon={\n//                     favorites.includes(card.id) ? \"heart\" : \"heart outline\"\n//                   }\n//                 />\n\n \n// class Demo extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       checked: false\n//     };\n//   }\n \n//   onClick = (evnet, props) => {\n//     this.setState({ checked: !this.state.checked });\n//   }\n \n//   render() {\n//     const { checked } = this.state;\n \n//     return (\n//       <>\n//         <h1>{checked ? 'checked' : 'unchecked'}</h1>\n//         <HeartCheckbox checked={checked} onClick={this.onClick} />\n//       </>\n//     );\n//   }\n// }\n \n// render(<Demo />, document.getElementById(\"app\"));\n\nexport default Restaurants;"]},"metadata":{},"sourceType":"module"}