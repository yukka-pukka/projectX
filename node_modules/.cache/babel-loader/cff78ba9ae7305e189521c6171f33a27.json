{"ast":null,"code":"var _jsxFileName = \"/Users/ada/capstone-scratch/Scratch/src/components/reviews/reviewform.js\";\nimport React, { Component } from 'react';\nimport Star from './star.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isActive: false,\n      isSubmitted: false,\n      rating: 1,\n      name: '',\n      review: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-form bg-white content-padding block-margin-top\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: this.state.isActive ? '' : 'hide',\n        onSubmit: this.props.submitForm,\n        children: [this.props.validation, /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"review\",\n          value: this.props.review,\n          placeholder: \"Put your review here.\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Star, {\n          rating: this.state.rating,\n          onClick: rating => this.setState({ ...this.state,\n            rating\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), \";\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          value: \"Submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  showForm() {\n    this.setState({ ...this.state,\n      isActive: true\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({ ...this.state,\n      [name]: value\n    });\n  }\n\n}\n\nexport default Form; // class addCommentForm extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         author_name: '',\n//         rating: 5,\n//         text: ''\n//       };\n//     }\n//     onChangeHander = e => {\n//       let value = e.target.value;\n//       switch (e.target.name) {\n//         case 'author':\n//           this.setState({\n//             author_name: value\n//           });\n//           break;\n//         case 'comment_text':\n//           this.setState({\n//             text: value\n//           });\n//           break;\n//         case 'star':\n//           this.setState({\n//             rating: parseInt(value, 10)\n//           });\n//           break;\n//         default:\n//           return null;\n//       }\n//     };\n//     onSubmitHandler = e => {\n//       e.preventDefault();\n//     };\n//     render() {\n//       let form = null;\n//       // properties\n//       const { active, targetRestaurant, filterObject } = this.props;\n//       // Methods\n//       const {\n//         toggleCommentForm,\n//         addComment,\n//         turnOffAddCommentButton,\n//         filterRestaurants,\n//         mapBounds\n//       } = this.props;\n//       if (active) {\n//         form = (\n//           <div className=\"form-backdrop\">\n//             <div onClick={toggleCommentForm} className=\"close-btn\">\n//               <i className=\"far fa-window-close\" />\n//             </div>\n//             <form\n//               autoComplete=\"off\"\n//               className=\"AddCommentForm border border-success px-5 py-2 rounded\"\n//               onSubmit={e => {\n//                 this.onSubmitHandler(e);\n//                 addComment(\n//                   { ...this.state, time: getTimeStamp() },\n//                   targetRestaurant\n//                 );\n//                 turnOffAddCommentButton(targetRestaurant);\n//                 filterRestaurants(filterObject, mapBounds);\n//               }}\n//             >\n//               <div className=\"form-group\">\n//                 <label className=\"text-light\" htmlFor=\"\">\n//                   Name: <span className=\"text-danger\">*</span>\n//                 </label>\n//                 <input\n//                   name=\"author\"\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   onChange={e => {\n//                     this.onChangeHander(e);\n//                   }}\n//                   required\n//                 />\n//               </div>\n//               <RatingStar onchange={this.onChangeHander} />\n//               <div className=\"form-group\">\n//                 <label className=\"text-light\" htmlFor=\"\">\n//                   Comment:\n//                 </label>\n//                 <textarea\n//                   className=\"form-control\"\n//                   name=\"comment_text\"\n//                   onChange={e => {\n//                     this.onChangeHander(e);\n//                   }}\n//                 />\n//               </div>\n//               <input\n//                 type=\"submit\"\n//                 className=\"btn btn-success btn-sm\"\n//                 value=\"Submit\"\n//               />\n//             </form>\n//           </div>\n//         );\n//       }\n//       return form;\n//     }\n//   }","map":{"version":3,"sources":["/Users/ada/capstone-scratch/Scratch/src/components/reviews/reviewform.js"],"names":["React","Component","Star","Form","constructor","state","isActive","isSubmitted","rating","name","review","handleInputChange","bind","render","props","submitForm","validation","setState","showForm","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAGA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzBG,EAAAA,WAAW,GACX;AACI;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,WAAW,EAAE,KAFJ;AAGTC,MAAAA,MAAM,EAAE,CAHC;AAITC,MAAAA,IAAI,EAAE,EAJG;AAKTC,MAAAA,MAAM,EAAE;AALC,KAAb;AAQA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDC,EAAAA,MAAM,GACN;AACI,wBACI;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,6BAEI;AAAM,QAAA,SAAS,EAAE,KAAKR,KAAL,CAAWC,QAAX,GAAsB,EAAtB,GAA2B,MAA5C;AAAoD,QAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWC,UAAzE;AAAA,mBAEK,KAAKD,KAAL,CAAWE,UAFhB,eAII;AAAU,UAAA,IAAI,EAAC,QAAf;AAAwB,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWJ,MAA1C;AAAkD,UAAA,WAAW,EAAC,uBAA9D;AACU,UAAA,QAAQ,EAAE,KAAKC;AADzB;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAMI,QAAC,IAAD;AACA,UAAA,MAAM,EAAI,KAAKN,KAAL,CAAWG,MADrB;AAEA,UAAA,OAAO,EAAGA,MAAD,IAAY,KAAKS,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAeG,YAAAA;AAAf,WAAd;AAFrB;AAAA;AAAA;AAAA;AAAA,gBANJ,oBAYI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,IAAI,EAAC,QAAhC;AAAyC,UAAA,KAAK,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AAEDU,EAAAA,QAAQ,GACR;AACI,SAAKD,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KAAd;AACH;;AAEDK,EAAAA,iBAAiB,CAACQ,KAAD,EACjB;AACI,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMZ,IAAI,GAAGW,MAAM,CAACX,IAApB;AAEA,SAAKQ,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAgB,OAACI,IAAD,GAAQY;AAAxB,KAAd;AACH;;AAxDwB;;AA2D7B,eAAelB,IAAfsourcesContent":["import React, {Component} from 'react';\nimport Star from './star.js';\n\n\nclass Form extends Component {\n    constructor()\n    {\n        super();\n\n        this.state = {\n            isActive: false,\n            isSubmitted: false,\n            rating: 1,\n            name: '',\n            review: '',\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    render()\n    {\n        return (\n            <div className=\"review-form bg-white content-padding block-margin-top\">\n\n                <form className={this.state.isActive ? '' : 'hide'} onSubmit={this.props.submitForm}>\n\n                    {this.props.validation}\n                    \n                    <textarea name=\"review\" value={this.props.review} placeholder=\"Put your review here.\"\n                              onChange={this.handleInputChange}/>\n                    <Star \n                    rating = {this.state.rating}\n                    onClick={(rating) => this.setState({...this.state,rating})}\n                       \n                    />;\n\n                    <button className=\"button\" type=\"submit\" value=\"Submit\">\n                        Submit \n                    </button>\n                </form>\n\n            \n\n            </div>\n        )\n    }\n\n    showForm()\n    {\n        this.setState({...this.state, isActive: true});\n    }\n\n    handleInputChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({...this.state, [name]: value})\n    }\n}\n\nexport default Form;\n\n\n// class addCommentForm extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         author_name: '',\n//         rating: 5,\n//         text: ''\n//       };\n//     }\n  \n//     onChangeHander = e => {\n//       let value = e.target.value;\n//       switch (e.target.name) {\n//         case 'author':\n//           this.setState({\n//             author_name: value\n//           });\n//           break;\n//         case 'comment_text':\n//           this.setState({\n//             text: value\n//           });\n//           break;\n//         case 'star':\n//           this.setState({\n//             rating: parseInt(value, 10)\n//           });\n//           break;\n//         default:\n//           return null;\n//       }\n//     };\n  \n//     onSubmitHandler = e => {\n//       e.preventDefault();\n//     };\n  \n//     render() {\n//       let form = null;\n  \n//       // properties\n//       const { active, targetRestaurant, filterObject } = this.props;\n  \n//       // Methods\n//       const {\n//         toggleCommentForm,\n//         addComment,\n//         turnOffAddCommentButton,\n//         filterRestaurants,\n//         mapBounds\n//       } = this.props;\n  \n//       if (active) {\n//         form = (\n//           <div className=\"form-backdrop\">\n//             <div onClick={toggleCommentForm} className=\"close-btn\">\n//               <i className=\"far fa-window-close\" />\n//             </div>\n//             <form\n//               autoComplete=\"off\"\n//               className=\"AddCommentForm border border-success px-5 py-2 rounded\"\n//               onSubmit={e => {\n//                 this.onSubmitHandler(e);\n//                 addComment(\n//                   { ...this.state, time: getTimeStamp() },\n//                   targetRestaurant\n//                 );\n//                 turnOffAddCommentButton(targetRestaurant);\n//                 filterRestaurants(filterObject, mapBounds);\n//               }}\n//             >\n//               <div className=\"form-group\">\n//                 <label className=\"text-light\" htmlFor=\"\">\n//                   Name: <span className=\"text-danger\">*</span>\n//                 </label>\n//                 <input\n//                   name=\"author\"\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   onChange={e => {\n//                     this.onChangeHander(e);\n//                   }}\n//                   required\n//                 />\n//               </div>\n//               <RatingStar onchange={this.onChangeHander} />\n//               <div className=\"form-group\">\n//                 <label className=\"text-light\" htmlFor=\"\">\n//                   Comment:\n//                 </label>\n//                 <textarea\n//                   className=\"form-control\"\n//                   name=\"comment_text\"\n//                   onChange={e => {\n//                     this.onChangeHander(e);\n//                   }}\n//                 />\n//               </div>\n//               <input\n//                 type=\"submit\"\n//                 className=\"btn btn-success btn-sm\"\n//                 value=\"Submit\"\n//               />\n//             </form>\n//           </div>\n//         );\n//       }\n//       return form;\n//     }\n//   }\n  "]},"metadata":{},"sourceType":"module"}