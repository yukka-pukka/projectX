{"ast":null,"code":"var _jsxFileName = \"/Users/ada/capstone-scratch/Scratch/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport mapStyles from \"../mapStyles\";\nimport firebase from \"firebase\";\nimport UserContext from \"../UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"90vw\",\n  height: \"90vh\"\n};\nconst center = {\n  lat: 47.620084,\n  lng: -122.320126\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst position = {\n  lat: 47.605,\n  lng: -122.3344\n};\n\nfunction Map(props) {\n  _s();\n\n  const {\n    user\n  } = React.useContext(UserContext);\n  const [restaurants, setRestaurants] = useState([]);\n  console.log(restaurants && restaurants.filter(r => !r.Location.lng));\n\n  const Search = search => {\n    const r = firebase.database().ref(\"Restaurants\");\n    r.on(\"value\", snapshot => {\n      let filteredResults = Array.from(snapshot.val()).filter(result => result.Name.toLowerCase().includes(search));\n      setRestaurants(filteredResults);\n    });\n  };\n\n  const saveResults = () => {\n    const r = firebase.database().ref(\"Searches\");\n    let size = 0;\n    const save = {};\n    r.on(\"value\", snapshot => size = Array.from(snapshot.val()).length);\n    save[size] = {\n      userID: user.uid,\n      query: query\n    };\n    r.set(save);\n    r.get().then(snapshot => {\n      console.log('saved searches', snapshot.val());\n    });\n    console.log(restaurants);\n  };\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const [selected, setSelected] = React.useState(null);\n  const [query, setQuery] = React.useState(new URLSearchParams(props.location.search).get(\"q\") || '');\n  React.useEffect(() => {\n    Search(query);\n  }, []);\n  if (loadError) return \"Error loading maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        Search(query);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: saveResults,\n        value: \"Save Search\",\n        disabled: !user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: e => {\n          console.log(e.target.value);\n          setQuery(e.target.value);\n        },\n        type: \"search\",\n        value: query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 13,\n      center: center,\n      options: options,\n      id: \"marker-example\",\n      children: [restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: restaurant.Location.lat,\n          lng: restaurant.Location.lng\n        },\n        onClick: () => {\n          setSelected(restaurant);\n        }\n      }, restaurant.Name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selected.Location.lat,\n          lng: selected.Location.lng\n        },\n        onCloseClick: () => {\n          setSelected(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\" \", selected.Name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selected.Address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"fHkQVHN6fCyDGH0I2/7q/irbTh0=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/ada/capstone-scratch/Scratch/src/components/Map.js"],"names":["React","useState","GoogleMap","useLoadScript","Marker","InfoWindow","mapStyles","firebase","UserContext","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","position","Map","props","user","useContext","restaurants","setRestaurants","console","log","filter","r","Location","Search","search","database","ref","on","snapshot","filteredResults","Array","from","val","result","Name","toLowerCase","includes","saveResults","size","save","length","userID","uid","query","set","get","then","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","selected","setSelected","setQuery","URLSearchParams","location","useEffect","e","preventDefault","target","value","map","restaurant","Address"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,SADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,UAJF,QAKO,wBALP;AAOA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAKA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,MADiB;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAA1B;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,SADQ;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;AAKA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAEV,SADM;AAEdW,EAAAA,gBAAgB,EAAE,IAFJ;AAGdC,EAAAA,WAAW,EAAE;AAHC,CAAhB;AAMA,MAAMC,QAAQ,GAAG;AACfN,EAAAA,GAAG,EAAE,MADU;AAEfC,EAAAA,GAAG,EAAE,CAAC;AAFS,CAAjB;;AAKA,SAASM,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAWtB,KAAK,CAACuB,UAAN,CAAiBf,WAAjB,CAAjB;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAW,IAAIA,WAAW,CAACI,MAAZ,CAAmBC,CAAC,IAAI,CAACA,CAAC,CAACC,QAAF,CAAWhB,GAApC,CAA3B;;AAEA,QAAMiB,MAAM,GAAIC,MAAD,IAAY;AACzB,UAAMH,CAAC,GAAGtB,QAAQ,CAAC0B,QAAT,GAAoBC,GAApB,CAAwB,aAAxB,CAAV;AACAL,IAAAA,CAAC,CAACM,EAAF,CAAK,OAAL,EAAeC,QAAD,IAAc;AAC1B,UAAIC,eAAe,GAAGC,KAAK,CAACC,IAAN,CAAWH,QAAQ,CAACI,GAAT,EAAX,EAA2BZ,MAA3B,CAAmCa,MAAD,IACtDA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCZ,MAAnC,CADoB,CAAtB;AAGAP,MAAAA,cAAc,CAACY,eAAD,CAAd;AACD,KALD;AAMD,GARD;;AAUA,QAAMQ,WAAW,GAAG,MAAM;AACxB,UAAMhB,CAAC,GAAGtB,QAAQ,CAAC0B,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,CAAV;AACA,QAAIY,IAAI,GAAG,CAAX;AACA,UAAMC,IAAI,GAAG,EAAb;AACAlB,IAAAA,CAAC,CAACM,EAAF,CAAK,OAAL,EAAeC,QAAD,IAAcU,IAAI,GAAGR,KAAK,CAACC,IAAN,CAAWH,QAAQ,CAACI,GAAT,EAAX,EAA2BQ,MAA9D;AACAD,IAAAA,IAAI,CAACD,IAAD,CAAJ,GAAa;AACXG,MAAAA,MAAM,EAAE3B,IAAI,CAAC4B,GADF;AAEXC,MAAAA,KAAK,EAAEA;AAFI,KAAb;AAIAtB,IAAAA,CAAC,CAACuB,GAAF,CAAML,IAAN;AAEAlB,IAAAA,CAAC,CAACwB,GAAF,GAAQC,IAAR,CAAclB,QAAD,IAAc;AACzBV,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BS,QAAQ,CAACI,GAAT,EAA9B;AACD,KAFD;AAGAd,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACD,GAfD;;AAiBA,QAAM;AAAE+B,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BrD,aAAa,CAAC;AAC5CsD,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADc,GAAD,CAA7C;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B9D,KAAK,CAACC,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM,CAACkD,KAAD,EAAQY,QAAR,IAAoB/D,KAAK,CAACC,QAAN,CACxB,IAAI+D,eAAJ,CAAoB3C,KAAK,CAAC4C,QAAN,CAAejC,MAAnC,EAA2CqB,GAA3C,CAA+C,GAA/C,KAAuD,EAD/B,CAA1B;AAIArD,EAAAA,KAAK,CAACkE,SAAN,CAAgB,MAAM;AACpBnC,IAAAA,MAAM,CAACoB,KAAD,CAAN;AACD,GAFD,EAEG,EAFH;AAIA,MAAIK,SAAJ,EAAe,OAAO,oBAAP;AAEf,sBACE;AAAA,4BACE;AACE,MAAA,QAAQ,EAAGW,CAAD,IAAO;AACfA,QAAAA,CAAC,CAACC,cAAF;AACArC,QAAAA,MAAM,CAACoB,KAAD,CAAN;AACD,OAJH;AAAA,8BAME;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAEN,WAA9B;AAA2C,QAAA,KAAK,EAAC,aAAjD;AAA+D,QAAA,QAAQ,EAAE,CAACvB;AAA1E;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AACE,QAAA,OAAO,EAAG6C,CAAD,IAAO;AACdzC,UAAAA,OAAO,CAACC,GAAR,CAAYwC,CAAC,CAACE,MAAF,CAASC,KAArB;AACAP,UAAAA,QAAQ,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACD,SAJH;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,KAAK,EAAEnB;AANT;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAkBGI,QAAQ,iBACP,QAAC,SAAD;AACE,MAAA,iBAAiB,EAAE9C,iBADrB;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,MAAM,EAAEG,MAHV;AAIE,MAAA,OAAO,EAAEG,OAJX;AAKE,MAAA,EAAE,EAAC,gBALL;AAAA,iBAOGS,WAAW,CAAC+C,GAAZ,CAAiBC,UAAD,iBACf,QAAC,MAAD;AAEE,QAAA,QAAQ,EAAE;AACR3D,UAAAA,GAAG,EAAE2D,UAAU,CAAC1C,QAAX,CAAoBjB,GADjB;AAERC,UAAAA,GAAG,EAAE0D,UAAU,CAAC1C,QAAX,CAAoBhB;AAFjB,SAFZ;AAME,QAAA,OAAO,EAAE,MAAM;AACbgD,UAAAA,WAAW,CAACU,UAAD,CAAX;AACD;AARH,SACOA,UAAU,CAAC9B,IADlB;AAAA;AAAA;AAAA;AAAA,cADD,CAPH,EAoBGmB,QAAQ,gBACP,QAAC,UAAD;AACE,QAAA,QAAQ,EAAE;AACRhD,UAAAA,GAAG,EAAEgD,QAAQ,CAAC/B,QAAT,CAAkBjB,GADf;AAERC,UAAAA,GAAG,EAAE+C,QAAQ,CAAC/B,QAAT,CAAkBhB;AAFf,SADZ;AAKE,QAAA,YAAY,EAAE,MAAM;AAClBgD,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD,SAPH;AAAA,+BASE;AAAA,kCACE;AAAA,4BAAMD,QAAQ,CAACnB,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAImB,QAAQ,CAACY;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,cADO,GAeL,IAnCN;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD;;GA3GQrD,G;UAgCyBjB,a;;;KAhCzBiB,G;AA6GT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\n\nimport mapStyles from \"../mapStyles\";\nimport firebase from \"firebase\";\nimport UserContext from \"../UserContext\"\n\n\n\n\nconst mapContainerStyle = {\n  width: \"90vw\",\n  height: \"90vh\",\n};\n\nconst center = {\n  lat: 47.620084,\n  lng: -122.320126,\n};\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nconst position = {\n  lat: 47.605,\n  lng: -122.3344,\n};\n\nfunction Map(props) {\n  const { user } = React.useContext(UserContext)\n  const [restaurants, setRestaurants] = useState([]);\n  console.log(restaurants && restaurants.filter(r => !r.Location.lng))\n\n  const Search = (search) => {\n    const r = firebase.database().ref(\"Restaurants\");\n    r.on(\"value\", (snapshot) => {\n      let filteredResults = Array.from(snapshot.val()).filter((result) =>\n        result.Name.toLowerCase().includes(search)\n      );\n      setRestaurants(filteredResults);\n    });\n  };\n\n  const saveResults = () => {\n    const r = firebase.database().ref(\"Searches\");\n    let size = 0;\n    const save = {};\n    r.on(\"value\", (snapshot) => size = Array.from(snapshot.val()).length);\n    save[size] = {\n      userID: user.uid,\n      query: query\n    };\n    r.set(save);\n\n    r.get().then((snapshot) => {\n      console.log('saved searches', snapshot.val());\n    })\n    console.log(restaurants);\n  };\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  });\n\n  const [selected, setSelected] = React.useState(null);\n  const [query, setQuery] = React.useState(\n    new URLSearchParams(props.location.search).get(\"q\") || ''\n  );\n\n  React.useEffect(() => {\n    Search(query)\n  }, [])\n\n  if (loadError) return \"Error loading maps\";\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          Search(query);\n        }}\n      >\n        <input type=\"button\" onClick={saveResults} value=\"Save Search\" disabled={!user} />\n        <input\n          onInput={(e) => {\n            console.log(e.target.value);\n            setQuery(e.target.value);\n          }}\n          type=\"search\"\n          value={query}\n        ></input>\n      </form>\n\n      {isLoaded && (\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          zoom={13}\n          center={center}\n          options={options}\n          id=\"marker-example\"\n        >\n          {restaurants.map((restaurant) => (\n            <Marker\n              key={restaurant.Name}\n              position={{\n                lat: restaurant.Location.lat,\n                lng: restaurant.Location.lng,\n              }}\n              onClick={() => {\n                setSelected(restaurant);\n              }}\n            />\n          ))}\n\n          {selected ? (\n            <InfoWindow\n              position={{\n                lat: selected.Location.lat,\n                lng: selected.Location.lng,\n              }}\n              onCloseClick={() => {\n                setSelected(null);\n              }}\n            >\n              <div>\n                <h2> {selected.Name} </h2>\n                <p>{selected.Address}</p>\n              </div>\n            </InfoWindow>\n          ) : null}\n        </GoogleMap>\n      )}\n    </div>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}